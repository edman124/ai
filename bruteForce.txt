import sys, collections, Queue, time
lookuprow = [
set(1,2,3,4,5),
set(6,7,8,9,10,11,12),
set(13,14,15,16,17,18,19),
set(20,21,22,23,24),
set(1,2,13,6,7),
set(20,14,15,8,9,3,4),
set(21,22,16,17,10,11,5),
set(23,24,18,19,12),
set(4,5,11,12,19),
set(2,3,9,10,17,18,24),
set(1,7,8,15,16,22,23),
set(6,13,14,20,21)
]
lookuphex = [
set(1,2,3,7,8,9),
set(3,4,5,9,10,11),
set(6,7,8,13,14,15),
set(10,11,12,17,18,19),
set(14,15,16,20,21,22),
set(16,17,18,22,23,24),
set(8,9,10,15,16,17)
]
middlehex = [8,9,10,15,16,17]
pzl=[]
for i in range(24)
	if i+1 in middlehex:
		pzl.append(c)
		c+=1
	pzl.append('.')

def bruteForce(pzl):
	if not isValid:
		return ""
	if isSolved:
		return pzl
	unfilled=pzl.index('.')
	for i in rang(7):
		pzl[unfilled]=i
		bf = bruteForce(pzl)
		if bf!="":
			return pzl
		pzl[unfilled]='.'
	return ""
def isSolved(pzl):
	if isValid:
		if '.' not in pzl:
			return True
	return False
def isValid(pzl):
	for row in lookuprow:
		mem=set('.')
		for ind in row:
			if pzl[ind-1] not in mem:
				return False
			mem.add(pzl[ind-1])
	for hex in lookuphex:
		mem=set('.')
		for ind in hex:
			if pzl[ind-1] not in mem:
				return False
			mem.add(pzl[ind-1])
	return True
	print(bruteForce(pzl))